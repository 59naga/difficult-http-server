#!/usr/bin/env node

// Dependencies
var express= require('express');
var dhs= require('./');

var commander= require('commander');
var touch= require('touch');
var open= require('open');

var path= require('path');

// Commands
commander
  .version(require('./package').version)
  .usage('<rootDir>')
  .option('-p, --port <number>','listening port <number>',59798)
  .option('-o, --open [browser]','open the `http://localhost`')
  .option('-h, --html5Mode','turn off bundling of all external modules in `./pkgs.js`',false)
  .option('-B, --no-bundle-external','turn off bundling of all external modules in `./pkgs.js`',true)
  .option('-R, --no-use-reactify','use `coffeeify` at `./index.coffee`',true)
  .option('-N, --no-use-ngannotate','disable `browserify-ngannotate` at `./index.coffee`',true)
  .option('-J, --no-use-jadeify','disable `jadeify` at `./index.coffee`',true)
  .option('-F, --no-use-brfs','disable `brfs` at `./index.coffee`',true)
;

commander
  .command('touch [index]')
  .description('`touch [index].coffee [index].jade [index].styl`')
  .action(function(name){
    if(name==null){
      name= 'index';
    }

    touch.sync(name+'.coffee');
    touch.sync(name+'.jade');
    touch.sync(name+'.styl');
    process.exit(0);
  })
;

commander
  .command('*')
  .description('boot the DifficultHTTPServer at *<rootDir>')
  .action(function(rootDir,options){
    // Default
    commander.cwd= path.resolve(process.cwd(),rootDir);

    // Boot
    var app= express();
    app.use(dhs(commander));
    app.listen(commander.port,function(){
      var url= 'http://localhost:'+commander.port;
      console.log('DifficultHTTPServer at %s using %s',url,rootDir);

      if(commander.open){
        var browser= commander.open===true ? null: commander.open;
        open(url,browser);
      }
    });
  })
;

commander.parse(process.argv);
if(process.argv.slice(2).length===0){
  commander.outputHelp();
}
